name: "[./.github/workflows/travis-publish-github.yaml]"

on:
  workflow_call:
    inputs:
      RELEASE_VERSION: 
        required: true
        default: 2024.03.0 
        type: string
      IS_STABLE_RELEASE: 
        required: true
        default: false 
        type: boolean
      COMMIT_SHA: 
        required: true 
        type: string
    secrets:
      BOT_TOKEN:
        required: true


run-name: Publishing ${{ inputs.tag }} to Github Release

jobs:
  publish-github:
    name: Publish archives to Github Releases
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Get zip archives
      - uses: actions/download-artifact@v4
        with:
          name: gama-zip-builds

      # Get Mac dmg signed archives
      - uses: actions/download-artifact@v3
        with:
          name: gama-mac-signed

      # Get Linux deb archive
      - uses: actions/download-artifact@v3
        with:
          name: gama-linux-deb

      # Get Windows exe
      - uses: actions/download-artifact@v3
        with:
          name: gama-windows-exe

      - name: Get travis scripts ready to use
        run: |
          # Get full travis script folder
          chmod +x ./travis/*
          # Debug
          ls -lah ${{ github.workspace }}

      - name: Setup new release data and rename files accordingly 
        id: setup_new_release_data
        run: |
          date=$(date +'%d/%m/%y %R')
          echo "date=$date" >> "$GITHUB_OUTPUT"

          # Add naming file depending on if current file is pre-release or not
          fileNameExtension=""
          if [[ "${{ inputs.IS_STABLE_RELEASE }}" == "false" ]]; then
            timestamp="$(echo $date | cut -d' ' -f1 | sed 's|/|.|g')"

            fileNameExtension=_${timestamp}_${{ inputs.COMMIT_SHA }}
          fi
            
          mkdir ${{ runner.temp }}/files
          mv *.zip *.deb *.dmg *.exe ${{ runner.temp }}/files
          cd ${{ runner.temp }}/files

          # Windows
          for file in *.exe *win32*.zip; do
            if [[ "$(echo $file | awk -F'_' '{print $NF}')" == *"withJDK"* ]]; then
              mv -v "$file" "GAMA_${{ inputs.RELEASE_VERSION }}_Windows_with_JDK${fileNameExtension}.$(echo $file | awk -F'.' '{print $NF}')"
            else
              mv -v "$file" "GAMA_${{ inputs.RELEASE_VERSION }}_Windows${fileNameExtension}.$(echo $file | awk -F'.' '{print $NF}')"
            fi
          done

          # Mac
          for file in *.dmg; do
            prefix="${fileNameExtension}.dmg"
            if [[ "$(echo $file | awk -F'_' '{print $NF}')" == *"withJDK"* ]]; then
              prefix="_with_JDK${prefix}"
            fi

            if [[ "$file" == *"aarch64"* ]]; then
              prefix="_M1${prefix}"
            fi
            
            prefix="GAMA_${{ inputs.RELEASE_VERSION }}_MacOS${prefix}"

            mv -v $file $prefix
          done

          # Linux
          for file in *.deb gama-platform*.zip; do
            if [[ "$(echo $file | awk -F'_' '{print $1}')" == *"jdk"* ]]; then
              mv -v "$file" "GAMA_${{ inputs.RELEASE_VERSION }}_Linux_with_JDK${fileNameExtension}.$(echo $file | awk -F'.' '{print $NF}')"
            else
              mv -v "$file" "GAMA_${{ inputs.RELEASE_VERSION }}_Linux${fileNameExtension}.$(echo $file | awk -F'.' '{print $NF}')"
            fi
          done

      - name: Create checksum file
        run: |
          cd ${{ runner.temp }}/files
          touch checksum.txt
          echo "SHA1" > checksum.txt
          sha1sum ./GAMA_* >> checksum.txt
          echo "" >> checksum.txt
          echo "SHA256" >> checksum.txt
          sha256sum ./GAMA_* >> checksum.txt
          echo "" >> checksum.txt
          echo "SHA512" >> checksum.txt
          sha512sum ./GAMA_* >> checksum.txt
          echo "" >> checksum.txt
          echo "MD5" >> checksum.txt
          md5sum ./GAMA_* >> checksum.txt
          cat checksum.txt

      - name: Delete old release
        uses: cb80/delrel@v0.16.0
        with:
          tag: ${{ inputs.RELEASE_VERSION }}
          token: ${{ secrets.BOT_TOKEN }}
      
      - name: Create/Update tag
        uses: rickstaa/action-create-tag@v1.6.3
        with:
          tag: ${{ inputs.RELEASE_VERSION }}
          force_push_tag: true

      - name: Publish alpha to Github
        uses: svenstaro/upload-release-action@2.7.0
        if: "${{ !inputs.IS_STABLE_RELEASE }}"
        with:
          body: |
            Alpha release for GAMA ${{ inputs.RELEASE_VERSION }}. Please test and report issues.
            Last updated on ${{ steps.setup_new_release_data.outputs.date }}.
            It has been built on the commit ${{ inputs.COMMIT_SHA }}.
          file: ${{ runner.temp }}/files/*
          file_glob: true
          make_latest: false
          promote: false
          prerelease: true
          release_name: Alpha Version ${{ inputs.RELEASE_VERSION }}
          tag: ${{ inputs.RELEASE_VERSION }}
          repo_token: ${{ secrets.BOT_TOKEN }}

      - name: Publish stable to Github
        uses: svenstaro/upload-release-action@2.7.0
        if: "${{ inputs.IS_STABLE_RELEASE }}"
        with:
          body: |
            Release for GAMA ${{ inputs.RELEASE_VERSION }}.
            Published on ${{ steps.setup_new_release_data.outputs.date }}.
          file: ${{ runner.temp }}/files/*
          file_glob: true
          make_latest: true
          promote: true
          prerelease: false
          release_name: Version ${{ inputs.RELEASE_VERSION }}
          tag: ${{ inputs.RELEASE_VERSION }}
          repo_token: ${{ secrets.BOT_TOKEN }}