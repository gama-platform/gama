/**
* Name: Slicing
* Based on the internal empty template. 
* Author: baptiste lesquoy
* Tags: 
*/


model Slicing

experiment "Slicing tests" type:test {
	
	list l <- [1,2,3,4,5,6];
		
	test simpleSlicing {
		assert l slice(0, 3) = [1,2,3];
	}
	
	test simpleSlicingExplicitStep {
		assert l slice(0, 3, 1) = [1,2,3];
	}
	
	test slicingStep {
		assert l slice (0, 3, 2) = [1,3];
	}
	
	test slicingNegativeStep {
		assert l slice (5, 2, -1) = [6,5,4];	
	}
	
	test reverseList {
		assert l slice(5,0, -1) = [6,5,4,3,2,1];
	}
	
	test implicitNegativeStep {
		assert l slice(5, 2) = [6,5,4];
	}
	
	test negativeIndexEnd {
		assert l slice(2, -1, 1) = [3,4,5,6];
	}
	test negativeIndexEndImplicitStep {
		assert l slice(2, -1) = [3,4,5,6];
	}
	
	test negativeIndexStart {
		assert l slice(-2, 2, -1) = [5,4];
	}
	
	test negativeIndexStartImplicitStep {
		assert l slice(-2, 7) = [5,6];
	}
	
	test implicitNegativeStepWithNegativeIndices {
		assert l slice(-1, 2) = [6,5,4];
	}
	
	test sliceField{
		assert false;
		//TODO check the result and check the type
	}
	
	test sliceFloatMatrix{
		assert false;
		//TODO check the result and check the type
	}
	
	test sliceIntMatrix{
		assert false;
		//TODO check the result and check the type
	}
	
	test sliceObjectMatrix{
		assert false;
		//TODO check the result and check the type
	}
	
	test sliceAgentList{
		assert false;
		//TODO check the result and check the type
	}
	
	test sliceMatrixListColRow{
		assert false;
	}
	
	
	test sliceMatrixListColRowRepeatRows{
		assert false;
	}
	
	
	test sliceMatrixListColRowRepeatCols{
		assert false;
	}
	
	test sliceMatrixListReverseCols{
		assert false;
	}
	
	test sliceMatrixListReverseRows{
		assert false;
	}
	
}